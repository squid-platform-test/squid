name: Single CPU test

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string

  # schedule:
  # - cron: "10 3 12 * *" # earlier than multi-platform
#  push:
#    branches: [ github-actions-multiplatform ]

env:
  DOCKER_BUILDFARM_REPO: docker.io/squidcache/buildfarm
  DOCKER_BUILDFARM_TAG: latest
  pjobs: -j`nproc`
  COMPILER_MATRIX_JSON: '[ { "CC": \"gcc\", "CXX": \"g++\" },  { "CC": \"clang\", "CXX": \"clang++\" }]'
  LAYER_MATRIX_JSON: '[ { "name": \"layer-00-default\", "nick": \"default\" }, { "name": \"layer-01-minimal\", "nick": \"minimal\" }, { "name": \"layer-02-maximus\", "nick": \"maximus\" } ]'

concurrency:
  # Cancel ongoing tests in case of push to  branch
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.platform }}
  cancel-in-progress: true

jobs:

  gen-matrix:
    runs-on: ubuntu-24.04
    outputs:
      exclusion: ${{ steps.exclusion.outputs.exclusion }}
      os:  ${{ steps.exclusion.outputs.os }}
      compiler: ${{ steps.exclusion.outputs.compiler }}
      layer: ${{ steps.exclusion.outputs.layer }}
    steps:
      - name: Check out sources
        uses: actions/checkout@v4
        with:
          repository: kinkie/dockerfiles
      - name: Define exclusion list
        id: exclusion
        run: |
          printf "exclusion=" >> "$GITHUB_OUTPUT"
          make json-exclude-list >> "$GITHUB_OUTPUT"
          printf "os=" >> "$GITHUB_OUTPUT"
          make targets | sed 's/^- /\\"/;s/$/\\", /' | xargs echo | sed 's/^/\[ /;s/,$/\ ]/' >> "$GITHUB_OUTPUT"
          echo "compiler=${{ env.COMPILER_MATRIX_JSON }}" >> "$GITHUB_OUTPUT"
          echo "layer=${{ env.LAYER_MATRIX_JSON }}" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

  single-platform-test:
    needs: gen-matrix

    strategy:
      fail-fast: false
      matrix:
        platform: 
          - ${{ inputs.platform }}
        compiler: ${{ fromJSON(needs.gen-matrix.outputs.compiler) }}
        layer: ${{ fromJSON(needs.gen-matrix.outputs.layer) }}
        os: ${{ fromJSON(needs.gen-matrix.outputs.os) }}
        exclude:  ${{ fromJSON(needs.gen-matrix.outputs.exclusion) }}
    runs-on: ${{ matrix.platform != 'arm' && matrix.platform != 'arm64' && 'ubuntu-24.04' || 'ubuntu-22.04-arm' }}
    name: ${{ matrix.platform }}-${{ matrix.os }}-${{ matrix.compiler.CC }}-${{ matrix.layer.nick }}
    env:
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/ppc64le,linux/riscv64'
      - name: Checkout Sources
        uses: actions/checkout@v4
        with:
          repository: squid-cache/squid
      - name: Setup config.cache
        uses: actions/cache@v4
        with:
          key: config-cache-${{matrix.platform}}-${{ matrix.os }}-${{ matrix.compiler.CC }}
          path: config.cache
      - name: Run test-builds
        id: test-builds
        run: |
          if docker info >/dev/null 2>&1; then runtime=docker; else runtime=podman; fi
          $runtime run --rm -v $HOME:$HOME -v $PWD:$PWD -w $PWD -u $UID  \
            -e CC -e CXX -e CCACHE_DISABLE \
            --platform linux/${{ matrix.platform == 'arm' && 'arm/v7' || matrix.platform  }} \
            ${{ env.DOCKER_BUILDFARM_REPO }}-${{ matrix.os }}:${{ env.DOCKER_BUILDFARM_TAG }} \
            bash -c "\
              source ./test-suite/buildtests/${{ matrix.layer.name }}.opts && \
              ( ./bootstrap.sh && \
              mkdir build && \
              cd build && \
              eval ../configure ${DISTCHECK_CONFIGURE_FLAGS} --cache-file ../config.cache && \
              cd .. && \
              make -j`nproc` -C build all && \
              make -j`nproc` -C build check \
              ) 2>&1 | tee btlayer-${{ matrix.layer.nick }}.log \
            "
      - name: Publish build logs
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.os }}-${{ matrix.platform }}-${{ matrix.compiler.CC }}-${{ matrix.layer.nick }}
          path: |
            btlayer-*.log
            */config.log
