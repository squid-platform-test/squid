  @platform@:
    if: ${{ github.event.inputs.@platform@ == 'true' }}
    needs: gen-matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [@platform@]
        compiler: ${{ fromJSON(needs.gen-matrix.outputs.compiler) }}
        layer: ${{ fromJSON(needs.gen-matrix.outputs.layer) }}
        os: ${{ fromJSON(needs.gen-matrix.outputs.os) }}
        exclude:  ${{ fromJSON(needs.gen-matrix.outputs.exclusion) }}
    runs-on: ${{ matrix.platform == 'arm' || matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-22.04' }}
    name: ${{ matrix.platform }}-${{ matrix.os }}-${{ matrix.compiler.CC }}-${{ matrix.layer.nick }}
    env:
      CC: ${{ matrix.platform != 'arm' && matrix.platform != 'arm64' && matrix.platform != 'i386' && format('ccache {0}', matrix.compiler.CC) || matrix.compiler.CC }}
      CXX: ${{ matrix.platform != 'arm' && matrix.platform != 'arm64' && matrix.platform != 'i386' && format('ccache {0}', matrix.compiler.CXX) || matrix.compiler.CXX }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/ppc64le,linux/riscv64'
      - name: Checkout Sources
        uses: actions/checkout@v4
        with:
          repository: squid-cache/squid
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2.17
        if: ${{ matrix.platform != 'arm' && matrix.platform != 'arm64' && matrix.platform != 'i386' }}
        with:
          verbose: 2 # default 0
          key: ${{matrix.platform}}-${{ matrix.os }}-${{ matrix.compiler.CC }}-${{ matrix.layer.nick }}
      - name: Setup config.cache
        uses: actions/cache@v4
        with:
          key: ${{matrix.platform}}-${{ matrix.os }}-${{ matrix.compiler.CC }}
          path: config.cache
      - name: Run test-builds
        id: test-builds
        run: |
          if docker info >/dev/null 2>&1; then runtime=docker; else runtime=podman; fi
          $runtime run --rm -v $HOME:$HOME -v $PWD:$PWD -w $PWD -u $UID  \
            -e CC -e CXX -e CCACHE_DISABLE \
            --platform linux/${{ matrix.platform == 'arm' && 'arm/v7' || matrix.platform  }} \
            ${{ env.DOCKER_BUILDFARM_REPO }}-${{ matrix.os }}:${{ env.DOCKER_BUILDFARM_TAG }} \
            bash -c "\
              ccache --set-config=cache_dir=\$PWD/.ccache; \
              ./test-builds.sh --aggressively-use-config-cache --config-cache-file=config.cache --progress ${{ matrix.layer.name }}; \
            "
